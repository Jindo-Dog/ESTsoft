plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.10'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.estsoft'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

// lombok
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.code.gson:gson:2.11.0'

    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.1'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // querydsl
    implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
    implementation("com.querydsl:querydsl-apt:5.0.0:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta")
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // UUID generator
    implementation group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '5.1.0'
}

def querydslGenerated = file("build/generated/querydsl")

sourceSets {
    main {
        java {
            srcDirs += querydslGenerated
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.incremental = false
    options.generatedSourceOutputDirectory = file(querydslGenerated)
}

tasks.named("clean") {
    doLast {
        querydslGenerated.deleteDir()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}